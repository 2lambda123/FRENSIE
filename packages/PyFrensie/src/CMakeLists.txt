SET(HEADERS "")
SET(SOURCES "")

# Set up the include paths
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PYTRILINOS_SRC_DIR_PATH})

# Define the target for the swig runtime header
SET(SWIG_RUNTIME swigpyrun.h)
EXECUTE_PROCESS(COMMAND ${SWIG_EXECUTABLE} -python -external-runtime
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  OUTPUT_FILE ${SWIG_RUNTIME})
LIST(APPEND HEADERS ${CMAKE_CURRENT_BINARY_DIR}/${SWIG_RUNTIME})

# Create the utility module
SET_SOURCE_FILES_PROPERTIES(Utility.i PROPERTIES CPLUSPLUS ON)
SWIG_ADD_MODULE(Utility python Utility.i)
SWIG_LINK_LIBRARIES(Utility ${PYTHON_LIBRARIES} utility_dist utility_prng ${TEUCHOS_CORE})
INSTALL(TARGETS ${SWIG_MODULE_Utility_REAL_NAME}
  DESTINATION ${PyFrensie_INSTALL_DIR})
ADD_CUSTOM_COMMAND(TARGET ${SWIG_MODULE_Utility_REAL_NAME} POST_BUILD
  COMMAND ${PYTHON_EXECUTABLE} -c "import py_compile; py_compile.compile('Utility.py')"
  COMMENT "Byte compiling Utility.py"
  VERBATIM)
INSTALL(FILES 
  ${CMAKE_CURRENT_BINARY_DIR}/Utility.py
  ${CMAKE_CURRENT_BINARY_DIR}/Utility.pyc
  DESTINATION ${PyFrensie_INSTALL_DIR})
LIST(APPEND PyFrensie_MODULES Utility)

# Add the PyFrensie subdirectory
ADD_SUBDIRECTORY(PyFrensie)