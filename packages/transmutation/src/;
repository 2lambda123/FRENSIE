//---------------------------------------------------------------------------//
//!
//! \file   Transmutation_DecayMatrix.cpp
//! \author Alex Bennett
//! \brief  Creates a decay matrix for depletion.
//!
//---------------------------------------------------------------------------//

// Trilinos Includes
#include <Teuchos_Array.hpp>

// FRENSIE Includes
#include "Transmutation_DecayMatrix.hpp"
#include "Data_DecayFile.hpp"
#include "Data_DecayData.hpp"
#include "Data_DecayLib.hpp"
#include "DecayDataPath.hpp"

namespace Transmutation {

void DecayMatrix::getDecayMatrix()
{
     Teuchos::Array<int> zaids(3);
     zaids[0] = 3007;
     zaids[1] = 4011;
     zaids[2] = 5011;

     std::string decay_data_path = DECAY_DATA_DIRECTORY;
     decay_data_path += "endf7.dk.xml";

     data::DecayFile decay_file(decay_data_path);
     data::DecayLib decay_library(decay_file);

     Teuchos::Array<Teuchos::Array<double> > decay_matrix(zaids.length());

     std::cout << std::endl;

     for(int i = 0; i < zaids.length(); i++)
     {
          decay_matrix[i].resize(zaids.length());
          
          // Need to initilize to zero????     

          data::DecayData decay_data = decay_library.GetDecayData(zaids[i]);          

          decay_matrix[i][i] -= decay_data.GetDecayConst();

          std::cout << "Number of daughters :" << decay_data.GetNumber() << std::endl; 

          for(int j = 0; j < decay_data.GetNumber(); j++)
          {
               for(int k = 0; k < zaids.length(); k++)
               {
                     if( zaids[k] == decay_data.GetDaughter(j) )
                     {
                          std::cout << "Match for isotope : " << zaids[k] << std::endl;

                          data::DecayData daughter_decay_data = 
                                decay_library.GetDecayData(decay_data.GetDaughter(j));
                          decay_matrix[i][k] += daughter_decay_data.GetDecayConst();
                     }
               }
          }
      }

     std::cout << std::endl;

     for(int i = 0; i < zaids.length(); i++)
     {
          decay_matrix[i].resize(zaids.length());

          for(int j = 0; j < zaids.length(); ++j) 
          {
               std::cout << decay_matrix[i][j] << " ";
          }
          std::cout << std::endl;
     }
}

} // End namespace transmutation

//---------------------------------------------------------------------------//
// end Transmutation_DecayMatrix.cpp
//---------------------------------------------------------------------------//
